[
  {
    "id": "adbd3505309eb1bf",
    "type": "tab",
    "label": "Raspberry Pi",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "2fd4c72578d01164",
    "type": "tab",
    "label": "Ruuvitag",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "e4a9e1b7150f4590",
    "type": "tab",
    "label": "Ruuvitag LED Toggle",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "67611c32b6400b40",
    "type": "mqtt-broker",
    "name": "",
    "broker": "172.27.224.243",
    "port": 1883,
    "clientid": "",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": 4,
    "keepalive": 60,
    "cleansession": true,
    "autoUnsubscribe": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthRetain": "false",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closeRetain": "false",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willRetain": "false",
    "willPayload": "",
    "willMsg": {},
    "userProps": "",
    "sessionExpiry": ""
  },
  {
    "id": "ee42d7613612c402",
    "type": "mqtt-broker",
    "name": "",
    "broker": "172.27.224.243",
    "port": 1883,
    "clientid": "",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": 4,
    "keepalive": 60,
    "cleansession": true,
    "autoUnsubscribe": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthRetain": "false",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closeRetain": "false",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willRetain": "false",
    "willPayload": "",
    "willMsg": {},
    "userProps": "",
    "sessionExpiry": ""
  },
  {
    "id": "a0c8a6853d2b2ad0",
    "type": "mqtt-broker",
    "name": "",
    "broker": "172.27.224.243",
    "port": 1883,
    "clientid": "",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": 4,
    "keepalive": 60,
    "cleansession": true,
    "autoUnsubscribe": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthRetain": "false",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closeRetain": "false",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willRetain": "false",
    "willPayload": "",
    "willMsg": {},
    "userProps": "",
    "sessionExpiry": ""
  },
  {
    "id": "908055a359713000",
    "type": "mqtt-broker",
    "name": "",
    "broker": "mqtt.eclipseprojects.io",
    "port": 1883,
    "clientid": "",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": 4,
    "keepalive": 60,
    "cleansession": true,
    "autoUnsubscribe": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthRetain": "false",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closeRetain": "false",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willRetain": "false",
    "willPayload": "",
    "willMsg": {},
    "userProps": "",
    "sessionExpiry": ""
  },
  {
    "id": "3631d62550591e88",
    "type": "influxdb",
    "hostname": "172.27.224.243",
    "port": 8086,
    "protocol": "http",
    "database": "sensor_data",
    "name": "",
    "usetls": false,
    "tls": "",
    "influxdbVersion": "1.x",
    "url": "http://localhost:8086",
    "timeout": 10,
    "rejectUnauthorized": true
  },
  {
    "id": "389105a2e2f389d4",
    "type": "change",
    "z": "adbd3505309eb1bf",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "msg.payload.temperature",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 320,
    "y": 140,
    "wires": [["42f14db53c3d6148", "7993f9c58e38def0"]]
  },
  {
    "id": "42f14db53c3d6148",
    "type": "influxdb out",
    "z": "adbd3505309eb1bf",
    "influxdb": "3631d62550591e88",
    "name": "",
    "measurement": "temperature",
    "precision": "",
    "retentionPolicy": "",
    "database": "database",
    "precisionV18FluxV20": "ms",
    "retentionPolicyV18Flux": "",
    "org": "organisation",
    "bucket": "bucket",
    "x": 680,
    "y": 140,
    "wires": []
  },
  {
    "id": "e69c0017ce4008c4",
    "type": "mqtt in",
    "z": "adbd3505309eb1bf",
    "name": "Raspberry Pi",
    "topic": "-----",
    "qos": "2",
    "datatype": "auto-detect",
    "broker": "67611c32b6400b40",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 90,
    "y": 140,
    "wires": [["389105a2e2f389d4", "6adb151588fda685"]]
  },
  {
    "id": "6adb151588fda685",
    "type": "debug",
    "z": "adbd3505309eb1bf",
    "name": "debug 1",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 320,
    "y": 260,
    "wires": []
  },
  {
    "id": "7993f9c58e38def0",
    "type": "debug",
    "z": "adbd3505309eb1bf",
    "name": "debug 2",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 580,
    "y": 260,
    "wires": []
  },
  {
    "id": "763c2c024fa09136",
    "type": "mqtt in",
    "z": "2fd4c72578d01164",
    "name": "Ruuvitag MQTT",
    "topic": "sensors/test",
    "qos": "2",
    "datatype": "auto-detect",
    "broker": "ee42d7613612c402",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 100,
    "y": 140,
    "wires": [["4d6d545deb264086", "569466f6a6469fac"]]
  },
  {
    "id": "4d6d545deb264086",
    "type": "change",
    "z": "2fd4c72578d01164",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "[   {     \"humidity\": msg.payload.data_humidity,     \"temperature\": msg.payload.data_temperature,     \"acceleration\": msg.payload.data_acceleration,     \"acceleration_x\": msg.payload.data_acceleration_x,     \"acceleration_y\": msg.payload.data_acceleration_y,     \"acceleration_z\": msg.payload.data_acceleration_z,     \"tx_power\": msg.payload.data_tx_power,     \"battery\": msg.payload.data_battery,     \"movement_counter\": msg.payload.data_movement_counter,     \"measurement_sequence_number\": msg.payload.data_measurement_sequence_number,     \"rssi\": msg.payload.data_rssi   },   {     \"tag1\": msg.payload.mac,     \"tag2\": msg.payload.data_mac   } ]",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 340,
    "y": 140,
    "wires": [["e2791bf6aa3beb87", "a1e8a24802f6eee6"]]
  },
  {
    "id": "569466f6a6469fac",
    "type": "debug",
    "z": "2fd4c72578d01164",
    "name": "debug 3",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 340,
    "y": 260,
    "wires": []
  },
  {
    "id": "e2791bf6aa3beb87",
    "type": "debug",
    "z": "2fd4c72578d01164",
    "name": "debug 4",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 260,
    "wires": []
  },
  {
    "id": "a1e8a24802f6eee6",
    "type": "influxdb out",
    "z": "2fd4c72578d01164",
    "influxdb": "3631d62550591e88",
    "name": "",
    "measurement": "ruuvitag_data",
    "precision": "",
    "retentionPolicy": "",
    "database": "database",
    "precisionV18FluxV20": "ms",
    "retentionPolicyV18Flux": "",
    "org": "organisation",
    "bucket": "bucket",
    "x": 720,
    "y": 140,
    "wires": []
  },
  {
    "id": "72a63d439f0e5f98",
    "type": "mqtt in",
    "z": "e4a9e1b7150f4590",
    "name": "Ruuvitag MQTT in",
    "topic": "sensors/test",
    "qos": "2",
    "datatype": "auto-detect",
    "broker": "a0c8a6853d2b2ad0",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 110,
    "y": 180,
    "wires": [["ccc30530d5249725"]]
  },
  {
    "id": "151cfb9ee992270d",
    "type": "debug",
    "z": "e4a9e1b7150f4590",
    "name": "debug 5",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 580,
    "y": 280,
    "wires": []
  },
  {
    "id": "ccc30530d5249725",
    "type": "change",
    "z": "e4a9e1b7150f4590",
    "name": "Extract & Format",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "[   {     \"acceleration_z\": payload.data_acceleration_z   },   {     \"tag1\": payload.mac,     \"tag2\": payload.data_mac   } ]",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 350,
    "y": 180,
    "wires": [["bcf7d97467418128", "151cfb9ee992270d"]]
  },
  {
    "id": "bcf7d97467418128",
    "type": "function",
    "z": "e4a9e1b7150f4590",
    "name": "Toggle LED logic",
    "func": "let z = msg.payload[0].acceleration_z;\nlet mac = msg.payload[1].tag1;\n\n// Only process data from the correct tag\nif (mac !== \"C8:85:45:28:6B:DE\") {\n    return null;\n}\n\nlet position = context.get(\"position\") || \"unknown\";\n\nif (z < -850 && position !== \"down\") {\n    context.set(\"position\", \"down\");\n    msg.payload = \"on\";\n    return msg;\n\n} else if (z > 750 && position !== \"up\") {\n    context.set(\"position\", \"up\");\n    msg.payload = \"off\";\n    return msg;\n}\n\nreturn null;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 590,
    "y": 180,
    "wires": [["122fe2c63fc42a30", "bbc05210e88b90ad"]]
  },
  {
    "id": "122fe2c63fc42a30",
    "type": "debug",
    "z": "e4a9e1b7150f4590",
    "name": "debug 6",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 840,
    "y": 280,
    "wires": []
  },
  {
    "id": "bbc05210e88b90ad",
    "type": "mqtt out",
    "z": "e4a9e1b7150f4590",
    "name": "ESP32 LED Out",
    "topic": "esp32/led",
    "qos": "0",
    "retain": "",
    "respTopic": "",
    "contentType": "",
    "userProps": "",
    "correl": "",
    "expiry": "",
    "broker": "908055a359713000",
    "x": 860,
    "y": 180,
    "wires": []
  }
]
